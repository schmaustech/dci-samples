---

- name: Add undercloud to inventory
  add_host:
    name: "undercloud"
    ansible_fqdn: "{{ undercloud_ip }}"
    ansible_user: "stack"
    ansible_ssh_user: "stack"
    ansible_password: "password"
    ansible_host: "{{ undercloud_ip }}"

  # All these actions will be run on the undercloud node.
- delegate_to: undercloud
  block:
    # In the case you jump better different version of OpenStack, you may want
    # to store the release name in a local fact.
    - name: Set the openstack release name
      set_fact:
        release: '{{ hostvars.localhost.job_informations.job.topic.data.releasename }}'

    - name: Create directories for installation
      file:
        path: '/home/stack/{{ item }}'
        state: directory
      with_items:
        - images
        - templates

    - name: Register the Undercloud
      redhat_subscription:
        org_id: 'SUBSCRIPTION ORG ID'
        activationkey: 'SUBSCRIPTION KEY'
      become: true

    - name: Disable All RHEL repositories
      shell: >
        subscription-manager repos
        --disable=*
      register: rhsm
      until: rhsm.rc == 0
      retries: 5
      delay: 30
      become: true

    - name: Enable Required RHEL repositories
      shell: >
        subscription-manager repos
        --enable=rhel-7-server-rpms
        --enable=rhel-7-server-extras-rpms
        --enable=rhel-7-server-rh-common-rpms
        --enable=rhel-ha-for-rhel-7-server-rpms
      register: rhsm
      until: rhsm.rc == 0
      retries: 5
      delay: 30
      become: true

    - name: Enable DCI Openstack repository
      get_url:
        url: '{{ dci_baseurl }}/dci_repo/dci_repo.repo'
        dest: /etc/yum.repos.d/dci_repo.repo
      become: true

    - name: Ensure packages are updated
      yum:
        name: '*'
        state: latest
      become: true

    - name: Reboot the undercloud
      shell: |
        sleep 3
        reboot
      become: true
      async: 1
      poll: 0

    - name: Wait for the undercloud node to be back online
      wait_for:
        host: '{{ hostvars.localhost.undercloud_ip }}'
        port: 22
        search_regex: OpenSSH
        delay: 30
      delegate_to: localhost

    - name: Install Crudini
      yum:
        name: crudini
      become: true

    - name: Install python-tripleoclient
      yum:
        name: python-tripleoclient
      become: true

    - name: Install ceph-ansible
      yum:
        name: ceph-ansible
      become: true
      when: release >= 'pike'

    - name: Install the undercloud
      shell: |
        openstack undercloud install

    - name: Download Overcloud images
      yum:
        name: '{{ item }}'
      become: true
      with_items:
        - rhosp-director-images

    - name: Extract the archives
      unarchive:
        src: '/usr/share/rhosp-director-images/{{ item }}.tar'
        dest: /home/stack/images/
        remote_src: true
      with_items:
        - ironic-python-agent
        - overcloud-full

    - name: Upload images to glance
      shell: |
        source /home/stack/stackrc
        openstack overcloud image upload --image-path /home/stack/images/
      args:
        chdir: /home/stack/images/

    - name: Generating the container images environment file
      shell: >
        openstack overcloud container image prepare
        --namespace {{ dci_base_ip }}:5000/rhosp{{ dci_topic | regex_replace('^OSP','') }}
        --prefix=openstack-
        --tag latest
        -e /usr/share/openstack-tripleo-heat-templates/environments/docker.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/docker-ha.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/services/neutron-ovn-dvr-ha.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/services/octavia.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/ceph-ansible/ceph-ansible.yaml
        --set ceph_namespace=registry.access.redhat.com/rhceph
        --set ceph_image=rhceph-3-rhel7
        --output-env-file /home/stack/templates/docker_registry.yaml

    - name: Configure the nameserver for the overcloud
      shell: |
        source /home/stack/stackrc
        openstack subnet unset --dns-nameserver 8.8.8.8 ctlplane-subnet
        openstack subnet set --dns-nameserver 8.8.8.8 ctlplane-subnet

    - name: Clean old nodes out of undercloud
      shell: |
        source /home/stack/stackrc
        for line in `ironic node-list|grep False|awk {'print \$2'}`; do ironic node-delete $line; done

    - name: Import the overcloud nodes NUC1
      shell: |
        source /home/stack/stackrc
        openstack overcloud node import /home/stack/instackenv1.json
        sleep 30

    - name: Import the overcloud nodes NUC2
      shell: |
        source /home/stack/stackrc
        openstack overcloud node import /home/stack/instackenv2.json
        sleep 30

    - name: Import the overcloud nodes NUC3
      shell: |
        source /home/stack/stackrc
        openstack overcloud node import /home/stack/instackenv3.json
        sleep 30

    - name: Import the overcloud nodes CUBE1
      shell: |
        source /home/stack/stackrc
        openstack overcloud node import /home/stack/instackenv4.json
        sleep 30

    - name: Adjust Ceph Nodes Boot Disk
      shell: |
        source /home/stack/stackrc
        ironic node-update cube-vm1 add properties/root_device='{"size": ">=50"}'
        ironic node-update cube-vm2 add properties/root_device='{"size": ">=50"}'
        ironic node-update cube-vm3 add properties/root_device='{"size": ">=50"}'

    - name: Run the introspection
      shell: |
        source /home/stack/stackrc
        openstack overcloud node introspect --all-manageable --provide

    - name: Run the overcloud deployment
      shell: >
        source /home/stack/stackrc &&
        openstack overcloud deploy --templates --stack overcloud --templates --libvirt-type qemu
        --control-scale 3 --control-flavor baremetal
        --compute-scale 3 --compute-flavor baremetal 
        --ceph-storage-scale 3 --ceph-storage-flavor baremetal 
        --ntp-server pool.ntp.org
        -e /usr/share/openstack-tripleo-heat-templates/environments/tls-endpoints-public-ip.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/ceph-ansible/ceph-ansible.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/services-docker/octavia.yaml
        -e /usr/share/openstack-tripleo-heat-templates/environments/manila-cephfsnative-config-docker.yaml
        -e /home/stack/templates/rhel-registration/environment-rhel-registration.yaml
        -e /home/stack/templates/rhel-registration/rhel-registration-resource-registry.yaml
        -e /home/stack/templates/scheduler_hints_env.yaml
        -e /home/stack/templates/docker_registry.yaml
        -e /home/stack/templates/enable-tls.yaml
        -e /home/stack/templates/inject-trust-anchor.yaml
        -e /home/stack/templates/ceph.yaml
        -t 120
      ignore_errors: false

    - name: Generate keypair in Overcloud
      shell: |
        source /home/stack/overcloudrc
        rm -f /home/stack/openshift.pem
        openstack keypair create openshift > /home/stack/openshift.pem
        chmod 400 /home/stack/openshift.pem

    - name: Generate additional flavors
      shell: |
        source /home/stack/overcloudrc
        openstack flavor create --ram 8192 --disk 40 --vcpus 2 m1.medium
        openstack flavor create --ram 4096 --disk 20 --vcpus 1 m1.small

    - name: Upload RHEL 7.5 image into Glance
      shell: |
        source /home/stack/overcloudrc
        openstack image create rhel75 --disk-format=raw --container-format=bare < /home/stack/rhel-server-7.5-x86_64-kvm.raw
      ignore_errors: true

    - name: Deploy OCP on OSP
      shell: |
        source /home/stack/overcloudrc
